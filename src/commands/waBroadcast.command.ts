// src/commands/waBroadcast.command.ts
import type { MyContext } from "../types";
import { WhatsApp360 } from "../services/whatsapp360";
import { getActivePotentialOrders } from "../services/firebase";

// ====== –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–æ–º–µ—Ä—ñ–≤ ======
function normalizeMsisdn(input?: string): string | null {
  if (!input) return null;
  let digits = input.replace(/\D+/g, "");
  if (digits.startsWith("0")) digits = "48" + digits.slice(1);
  if (digits.length < 9) return null;
  return digits;
}
function pickPhone(u: any): string | null {
  return (
    normalizeMsisdn(u?.phone) ||
    normalizeMsisdn(u?.whatsapp) ||
    normalizeMsisdn(u?.msisdn) ||
    normalizeMsisdn(u?.phoneNumber) ||
    null
  );
}
const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));

// ====== –¢–£–¢ –í–°–¢–ê–í–ò–¢–ò –ú–ê–°–ò–í –ù–û–ú–ï–†–Ü–í –î–õ–Ø –í–ò–î–ê–õ–ï–ù–ù–Ø ======
// üëá –í–°–¢–ê–í —Ç—É—Ç –º–∞—Å–∏–≤ –∑—ñ —Å–≤–æ—ó—Ö 267 –Ω–æ–º–µ—Ä—ñ–≤ (—Ä—è–¥–∫–∏ –±–µ–∑ '+'):
//    –ø—Ä–∏–∫–ª–∞–¥: ["48603690606", "48575498881", ...]
const EXCLUDE_MSISDNS: string[] = [
  "48519333339",
  "48508184344",
  "48505388507",
  "48513185965",
  "48665615553",
  "48534701394",
  "48792656495",
  "48663111083",
  "48665408223",
  "48668034341",
  "48605287390",
  "48733760014",
  "48516575379",
  "48508898044",
  "48883518002",
  "48500500300",
  "48511210434",
  "48507584057",
  "48788675476",
  "48576773052",
  "48731990730",
  "48511585262",
  "48726247654",
  "48570086107",
  "48661385992",
  "48515566355",
  "48516375164",
  "48500052956",
  "48732708821",
  "48663414582",
  "48662280767",
  "48884884960",
  "48730618621",
  "48575079776",
  "48887982777",
  "48693565778",
  "48603400909",
  "48502231055",
  "48667093379",
  "48669539952",
  "48512902770",
  "48604277328",
  "48663792176",
  "440791852362",
  "48884070843",
  "48534462480",
  "48607414648",
  "48575454054",
  "48508282406",
  "48514460709",
  "48517862554",
  "48603290311",
  "447878717651",
  "48735313120",
  "48537174151",
  "48739280895",
  "48530690195",
  "48794072203",
  "48606281183",
  "48730329080",
  "48537375934",
  "447840997638",
  "491767032459",
  "48697115718",
  "48518438599",
  "48782437265",
  "48661222429",
  "48000000000",
  "48501570502",
  "447496758545",
  "48883783165",
  "48661469758",
  "48000000000",
  "48888513300",
  "48531766807",
  "48880153154",
  "48505455485",
  "48781066629",
  "48503852463",
  "48786288784",
  "48697787077",
  "48790861116",
  "48531003334",
  "491512681855",
  "48517088818",
  "48723490960",
  "48602762253",
  "48782800302",
  "48512674756",
  "48790331771",
  "48508220701",
  "48607865764",
  "48537195711",
  "48667286939",
  "48537902508",
  "48508708595",
  "48668257076",
  "48784063005",
  "48501310249",
  "48880184259",
  "48730376946",
  "48535261866",
  "48530775111",
  "48662245081",
  "440784086546",
  "48604177557",
  "48511694997",
  "48793426295",
  "48517206677",
  "48572968378",
  "48786282211",
  "48502049025",
  "48668980453",
  "48664218201",
  "48722329325",
  "48519564729",
  "48722335918",
  "48608381029",
  "491762292625",
  "48607640005",
  "48664701961",
  "48883077497",
  "440749135406",
  "48731844670",
  "48507697016",
  "48502576376",
  "48796607474",
  "48505656767",
  "48603483150",
  "48513697966",
  "447494778788",
  "48884214309",
  "48886386708",
  "48690017329",
  "48508998363",
  "48698549331",
  "48605069944",
  "48533777521",
  "48798118639",
  "48793092282",
  "48536260096",
  "48723744785",
  "48733690999",
  "48693282809",
  "48505172749",
  "48503603369",
  "48792611283",
  "48517816201",
  "48505333483",
  "48729307356",
  "48697714187",
  "48519199628",
  "48575784438",
  "48509642490",
  "48665016087",
  "48880631897",
  "48000000000",
  "48507838430",
  "48577912796",
  "48530536729",
  "48790251130",
  "48884800507",
  "48663259446",
  "48513237128",
  "48662499083",
  "491556278866",
  "48506688615",
  "48881008076",
  "48690534525",
  "48605201252",
  "48794350197",
  "48600251142",
  "48794504665",
  "48510832482",
  "48577023108",
  "48797635312",
  "48888752665",
  "48451280818",
  "48732433964",
  "48793243442000",
  "48504065627",
  "48694036775",
  "48796571288",
  "447448759483",
  "48731733498",
  "48660819323",
  "48505339306",
  "48697032291",
  "48661321740",
  "48662018541",
  "48693130346",
  "48662673543",
  "48536220534",
  "48606209898",
  "48721071903",
  "48530777820",
  "48574109039",
  "48574547569",
  "48884747422",
  "48534758053",
  "48691014198",
  "48609721638",
  "48000000000",
  "48721390825",
  "48609095359",
  "447740178225",
  "48660675508",
  "48733379125",
  "48795680268",
  "48512574907",
  "48796867122",
  "48886632224",
  "48792267989",
  "48736602028",
  "48730170225",
  "48537384306",
  "48607772700",
  "48575480203",
  "447447197463",
  "48698547430",
  "48693116371",
  "48577723823",
  "48795578274",
  "48607304346",
  "48533163523",
  "491511784924",
  "48792252045",
  "48796071707",
  "48517516767",
  "48503966750",
  "48504794086",
  "48000000000",
  "48789730006",
  "48507312568",
  "48787244287",
  "48783441260",
  "48514911044",
  "48664023108",
  "48508846852",
  "48535954472",
  "48500089265",
  "48795950514",
  "48509451653",
  "48000000000",
  "48530236846",
  "48509579806",
  "48518651824",
  "48723959868",
  "48698754979",
  "48512022099",
  "48739090536",
  "48792576295",
  "48505478660",
  "48571526663",
  "48889409255",
  "48725079322",
  "48699659124",
  "48796352020",
  "48886165485",
  "48733168703",
  "48519102117",
  "48733444313",
  "48575592124",
  "447756210967",
  "48603690606",
  "48665573456",
  "48726856819",
];
// ================================================

const PROGRESS_EVERY = 10;

export async function waBroadcastCommand(ctx: MyContext) {
  try {
    const args =
      (ctx.match as string)?.trim().split(/\s+/).filter(Boolean) || [];

    // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ (–º–æ–∂–µ—à –ø—Ä–æ–±—Ä–æ—Å–∏—Ç–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É)
    let baseChoice: "orders" | "potential" = "potential";
    let isTest = false;
    let link = "https://chokbrows.pl/brows";
    let price = "399 z≈Ç";

    for (const a of args) {
      const low = a.toLowerCase();
      if (low === "orders") baseChoice = "orders";
      if (low === "potential" || low === "potentialorders")
        baseChoice = "potential";
      if (low === "test") isTest = true;
      if (low === "live" || low === "prod") isTest = false;
      if (low.startsWith("http")) link = a;
      if (/\d/.test(a) && (low.includes("z≈Ç") || /^\d+/.test(a))) price = a;
    }

    await ctx.reply(
      [
        "üì≤ –ì–æ—Ç—É—é WhatsApp-—Ä–æ–∑—Å–∏–ª–∫—É:",
        `‚Ä¢ –ë–∞–∑–∞: *${baseChoice}*`,
        `‚Ä¢ –†–µ–∂–∏–º: *${isTest ? "TEST (dry-run)" : "LIVE"}*`,
        `‚Ä¢ –®–∞–±–ª–æ–Ω: *new_tarif*`,
        `‚Ä¢ Link: ${link}`,
        `‚Ä¢ Cena: ${price}`,
        "",
        "–°—Ç–∞—Ä—Ç—É—é –∑–±—ñ—Ä –æ—Ç—Ä–∏–º—É–≤–∞—á—ñ–≤‚Ä¶",
      ].join("\n"),
      { parse_mode: "Markdown" },
    );

    const raw = await getActivePotentialOrders();

    // –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è + —Ñ—ñ–ª—å—Ç—Ä –≤–∏–∫–ª—é—á–µ–Ω—å
    const recipients = (raw || [])
      .map((u: any) => ({
        to: pickPhone(u),
        firstName: u?.firstName,
        userId: u?.userId,
      }))
      .filter((x) => !!x.to)
      .filter((x) => !EXCLUDE_MSISDNS.includes(x.to!)); // <-- –≥–æ–ª–æ–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä

    const total = recipients.length;
    if (!total) {
      await ctx.reply(
        "üòï –ù–µ –∑–Ω–∞–π—à–æ–≤ –≤–∞–ª—ñ–¥–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω—É —É –≤–∏–±—Ä–∞–Ω—ñ–π –±–∞–∑—ñ (–∞–±–æ –≤—Å–µ —É –≤–∏–∫–ª—é—á–µ–Ω–Ω—è—Ö).",
      );
      return;
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è WA-–∫–ª—ñ—î–Ω—Ç–∞
    const wa = new WhatsApp360({
      apiKey: "QjcOjxJpBsYhvHCCj4Ux7pzNAK", // ‚ö†Ô∏è —Å–≤—ñ–π —Ä–µ–∞–ª—å–Ω–∏–π –∫–ª—é—á
      apiUrl: "https://waba-v2.360dialog.io", // Cloud endpoint
      defaultLanguage: "pl",
      testMode: false, // test -> –ª–æ–≥ –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
      testRecipient: process.env.TEST_MSISDN || "48575784438",
      rateLimitMs: 400,
      maxRetries: 3,
      templatesTtlMs: 30 * 60 * 1000,
    });

    // –í–∞–∂–ª–∏–≤–æ: –ø—ñ–¥–≥–æ—Ç—É—î–º–æ –∫–µ—à —à–∞–±–ª–æ–Ω—ñ–≤ –î–û —Ü–∏–∫–ª—É, —â–æ–± –Ω–µ –ª–æ–≤–∏—Ç–∏ 429
    await wa.primeTemplates();

    await ctx.reply(`üöÄ –°—Ç–∞—Ä—Ç—É—é –≤—ñ–¥–ø—Ä–∞–≤–∫—É WhatsApp (${total} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤)‚Ä¶`);

    let success = 0;
    let fail = 0;
    const failed: string[] = [];

    for (let i = 0; i < recipients.length; i++) {
      const r = recipients[i];
      try {
        await wa.sendTemplate({
          to: r.to!,
          name: "new_tarif",
          language: "pl",
        });
        success++;
      } catch (e) {
        fail++;
        failed.push(r.to!);
        console.error("Error sending WA message:", e);
      }

      const processed = success + fail;
      if (processed % PROGRESS_EVERY === 0 || processed === total) {
        await ctx.reply(
          `üìä –ü—Ä–æ–≥—Ä–µ—Å: ${processed}/${total}\n‚úÖ –£—Å–ø—ñ—à–Ω–æ: ${success}\n‚ùå –ü–æ–º–∏–ª–æ–∫: ${fail}`,
        );
      }

      // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–∞—É–∑–∞ –º—ñ–∂ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞–º–∏
      await sleep(150);
    }

    const failPreview = failed.slice(0, 15).join("\n");
    const lines = [
      "üèÅ *WhatsApp-—Ä–æ–∑—Å–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞*",
      `‚Ä¢ –†–µ–∂–∏–º: *${isTest ? "TEST" : "LIVE"}*`,
      `‚Ä¢ –í—Å—å–æ–≥–æ: ${total}`,
      `‚Ä¢ ‚úÖ –£—Å–ø—ñ—à–Ω–æ: ${success}`,
      `‚Ä¢ ‚ùå –ü–æ–º–∏–ª–æ–∫: ${fail}`,
    ];
    if (failed.length) {
      lines.push(
        "",
        "*–ù–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ (–ø–µ—Ä—à—ñ 15):*",
        "```\n" + failPreview + "\n```",
      );
      if (failed.length > 15) lines.push(`‚Ä¶ —â–µ ${failed.length - 15}`);
    }
    await ctx.reply(lines.join("\n"), { parse_mode: "Markdown" });
  } catch (err: any) {
    console.error("WA broadcast error:", err);
    await ctx.reply(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–∑—Å–∏–ª–∫–∏: ${err?.message || err}`);
  }
}
