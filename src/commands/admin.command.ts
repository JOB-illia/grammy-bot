import type { MyContext } from "../types";
import { isAdmin } from "../config/bot.config";
import { MESSAGES } from "../config/constants";
import { adminMenu } from "../features/admin/admin.menu";
import { adminState } from "../conversations/admin/admin";

export async function adminCommand(ctx: MyContext) {
  try {
    if (!isAdmin(ctx.from!.id.toString())) {
      await ctx.reply(MESSAGES.NO_ACCESS);
      return;
    }

    const userId = ctx.from!.id;
    ctx.session.mode = "admin";
    ctx.session.isAdmin = true;

    // —Ç—É—Ç —Å—Ç–æ–ø–∞—î–º–æ –≤–∞—à—ñ —Ñ–æ–Ω–æ–≤—ñ –ø—Ä–æ—Ü–µ—Å–∏
    // queueManager.stopProcessing(String(userId));
    // taskScheduler.cancelUserTasks(String(userId));

    adminState.set(userId, { step: "awaitContent" });

    await ctx.reply(
      "‚è∏Ô∏è –ö—É—Ä—Å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–∞—É–∑—É\n\n" +
        "üì¢ –†–µ–∂–∏–º —Ä–æ–∑—Å–∏–ª–∫–∏ (–±–µ–∑ –ª–æ–≥—ñ–≤ —É Firestore)\n" +
        "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ/–¥–æ–∫/voice).\n\n" +
        "–ö–æ–º–∞–Ω–¥–∏: /exit ‚Äî –≤–∏–π—Ç–∏, /cancel ‚Äî —Å–∫–∞—Å—É–≤–∞—Ç–∏.",
      {
        parse_mode: "Markdown",
        reply_markup: adminMenu,
      },
    );
  } catch (error) {
    console.error("Error in admin command:", error);
    await ctx.reply("‚ùå B≈ÇƒÖd dostƒôpu do panelu administratora");
  }
}
