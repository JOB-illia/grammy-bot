import { MyContext } from "../types";
import { getUsers, resetWebinarForAllUsers } from "../services/firebase";

const ADMIN_CHAT_ID = 428205877

export async function webinarReport(ctx: MyContext) {
  try {
    if (!ctx.from) return;
    if (ADMIN_CHAT_ID && ctx.from.id !== ADMIN_CHAT_ID) {
      return ctx.reply("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.");
    }

    await ctx.reply("‚è≥ –ó–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–µ–±—ñ–Ω–∞—Ä—É...");

    const users = await getUsers();
    let yes = 0, no = 0, unknown = 0;

    for (const u of users) {
      const v = (u?.webinar ?? null);
      if (v === "yes") yes++;
      else if (v === "no") no++;
      else unknown++;
    }

    const total = users.length;

    const report =
      "üìä *–ó–≤—ñ—Ç –ø–æ –≤–µ–±—ñ–Ω–∞—Ä—É*\n" +
      `üë• –í—Å—å–æ–≥–æ: *${total}*\n` +
      `‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏–ª–æ: *${yes}*\n` +
      `‚ùå –°–∫–∞–∑–∞–ª–∏, —â–æ –Ω–µ –±—É–¥–µ: *${no}*\n` +
      `‚ùì –ù–µ –ø—Ä–æ–≥–æ–ª–æ—Å—É–≤–∞–ª–∏: *${unknown}*`;

    return await ctx.api.sendMessage(ADMIN_CHAT_ID || ctx.chat!.id, report, {
      parse_mode: "Markdown",
    });
  } catch (e) {
    console.error("report-webinar error:", e);
    return await ctx.reply("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–≤—ñ—Ç—É.");
  }
}

export async function webinarReset(ctx: MyContext) {
  try {
    if (!ctx.from) return;
    if (ADMIN_CHAT_ID && ctx.from.id !== ADMIN_CHAT_ID) {
      return ctx.reply("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.");
    }

    await ctx.reply("üßπ –°–∫–∏–¥–∞—é –ø–æ–ª–µ `webinar` —É –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...");

    const res = await resetWebinarForAllUsers(); // { updated, failed }
    const msg =
      "‚úÖ –ì–æ—Ç–æ–≤–æ.\n" +
      `–û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å—ñ–≤: *${res.updated}*\n` +
      (res.failed ? `–ó –ø–æ–º–∏–ª–∫–∞–º–∏: *${res.failed}*` : "–ë–µ–∑ –ø–æ–º–∏–ª–æ–∫.");

    return await ctx.api.sendMessage(ADMIN_CHAT_ID || ctx.chat!.id, msg, {
      parse_mode: "Markdown",
    });
  } catch (e) {
    console.error("reset-webinar error:", e);
    return await ctx.reply("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–∏–Ω—É—Ç–∏ –ø–æ–ª–µ `webinar`.");
  }
}